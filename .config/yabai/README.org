#+title: Yabai Config
#+PROPERTY: header-args :tangle ~/.config/yabai/yabairc

* Table of Contents :toc:
- [[#about-this-config][About This Config]]
- [[#variables][Variables]]
- [[#scripting-addon][Scripting Addon]]
- [[#autofocus-of-windows][Autofocus of Windows]]
- [[#window-borders][Window Borders]]
- [[#window-gaps][Window Gaps]]
- [[#window-rules][Window Rules]]
- [[#creating-spaces][Creating Spaces]]
- [[#sketchyar-signals][Sketchyar Signals]]

* About This Config
yabai is a window management utility that is designed to work as an extension to the built-in window manager of macOS. It uses binary space partitioning, similar to BSPWM, to manage and tile your windows. This is my personal yabai config. The official GitHub page for yabai: https://github.com/koekeishiya/yabai.

* Variables
These variables control the various settings of yabai. They are meant to be changed easily by anyone.

#+begin_src conf
export external_bar_height="24"
export external_bar_position="top"
export shadow_toggle="off"
export mouse_mod="ctrl"
export border_toggle="on"
export border_width="2"
export border_radius="11"
export opacity_toggle="off"
export layout="bsp"
export gap_width="17"
export animation_duration="0"
export autoraise_toggle="on"
#+end_src

* Scripting Addon
The scripting addition is used to allow switching of workspaces instantly.

#+begin_src conf
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
#+end_src

* Autofocus of Windows
This setting allows the window that the mouse is on to be autofocused.

#+begin_src conf
if [[ $autoraise_toggle == "on" ]]; then
   yabai -m config focus_follows_mouse autoraise
fi

yabai -m config window_shadow $shadow_toggle
yabai -m config mouse_modifier $mouse_mod
yabai -m config layout $layout
yabai -m config window_animation_duration $animation_duration
yabai -m config window_border_radius $border_radius

yabai -m config window_opacity             $opacity_toggle
yabai -m config window_opacity_duration    0.2
yabai -m config active_window_opacity      1.0
yabai -m config normal_window_opacity      0.9

### Confgure mouse usage ###
yabai -m config mouse_action1              move   # with left click - resize
yabai -m config mouse_action2              resize     # with right click - move
#+end_src

* Window Borders
Configures the window borders that highlight the focused window

#+begin_src conf
yabai -m config window_border $border_toggle
yabai -m config window_border_width $border_width
yabai -m config active_window_border_color 0xFF6faec0
yabai -m config normal_window_border_color 0xFF3e4050
#+end_src

* Window Gaps
Configures the window caps based on gap width and the position of the bar

#+begin_src conf
if [[ $external_bar_position == "top" ]]; then
   yabai -m config top_padding                $(expr $gap_width + $external_bar_height)
   yabai -m config bottom_padding             $gap_width
   yabai -m config left_padding               $gap_width
   yabai -m config right_padding              $gap_width
   yabai -m config window_gap                 $gap_width

fi
if [[ $external_bar_position == "bottom" ]]; then
   yabai -m config top_padding                $gap_width
   yabai -m config bottom_padding             $(expr $gap_width + $external_bar_height)
   yabai -m config left_padding               $gap_width
   yabai -m config right_padding              $gap_width
   yabai -m config window_gap                 $gap_width

fi
if [[ $external_bar_position == "left" ]]; then
   yabai -m config top_padding                $gap_width
   yabai -m config bottom_padding             $gap_width
   yabai -m config left_padding               $(expr $gap_width + $external_bar_height)
   yabai -m config right_padding              $gap_width
   yabai -m config window_gap                 $gap_width

fi
if [[ $external_bar_position == "right" ]]; then
   yabai -m config top_padding                $gap_width
   yabai -m config bottom_padding             $gap_width
   yabai -m config left_padding              $gap_width
   yabai -m config right_padding              $(expr $gap_width + $external_bar_height)
   yabai -m config window_gap                 $gap_width

fi
#+end_src

* Window Rules
Sets rules for how specific windows are managed. These include unresizable windows and Qxuartz, which I use for Dmenu.

#+begin_src conf
yabai -m rule --add app="^(Calculator|System Settings|ColorSlurp|zoom.us|Photo Booth|Archive Utility|Color Picker|balenaEtcher)$" manage=off
yabai -m rule --add app="^(XQuartz)$" layer=above manage=off
#+end_src

* Creating Spaces
This creates spaces, which can be switched between using [S]+1-8
#+begin_src conf
yabai -m space 1 --label Code
yabai -m space 2 --label Text
yabai -m space 3 --label Web
yabai -m space 4 --label Idle
yabai -m space 5 --label Misc
yabai -m space 6 --label doc
yabai -m space 7 --label help
yabai -m space 8 --label music
#+end_src

* Sketchyar Signals
This sends signals to Sketchybar, which allows it to be updated with the window with focus and the title of the window.

#+begin_src conf
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_title_changed action="sketchybar --trigger title_change"
#+end_src

#+begin_src conf
echo "yabai configuration loaded.."
#+end_src
